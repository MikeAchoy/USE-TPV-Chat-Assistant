This directory contains test cases for OCL expressions. You can test
the USE compiler and evaluation of expressions by typing `make
test'. The calculated results should match the expected output in the
files *.out. Differences to the expected results can be found in the
*.result files.

File format of *.in files:
--------------------------

These files are for testing parsing and evaluation of expressions. A
file `foo.in' is used to derive files `foo.cmd' and `foo.out'. The
first is a command file that can be read by USE. The second contains
the expected output. Lines starting with `#' in *.in files are ignored
as well as empty lines. All other lines not starting with a `*' are
taken as input for USE. Lines with a leading `*' mark expected output
(without the `*') from USE.

"Topics" of the test files:
---------------------------
t001: Operations on build in types
t002: Operations on build in types and objects
t003: Navigation
t004: Shorthand collect on objects and build-in types
t005: Side-effect bug
t006: Access to operations with implicit and explicit source
t007: Type inference for collection literals
t008: Output format (sorted) for object sets
t009: Object destruction and reference to destroyed object
t010: Undo of object creation
t011: Single bug
t012: Operation call (swapLinks)
t013: New !set syntax
t014: Tuple literals
t015: Generator (Zug)
t016: Navigation while structure is invalid
t017: Evaluation of navigation in ternary association
t018: Object destruction with different types
t019: Evaluation of the equals method of Bags
t020: Combination of different collections
t021: Collections and OclAny
t022: Collections and user defined operations
t023: Static and dynamic types of collections
t024: Flattening
t025: Assign command
t026: -
t027: USE grammar
t028: Association class and navigation
t029: Navigation to empty link ends with upper bound > 1
t030: Tuple as attributes
t031: Detailed evaluation (??) of recursive operation
t032: Cycle test for composition
t033: Cycle test for aggregation
t034: Cycle test for aggregation and composition
t035: Single member of composition
t036: Single member of composition
t037: Single member of composition
t038: Different syntax of allInstances
t039: Tuples in collections
t040: oclEmty with Collection
t041: asSequence()
t042: Tuple as attribute in combination with operations
t043: Generator with CivStat example
t044: Overriding
t045: Collect and collectNested on sets
t046: OclAny and warnings
t047: Tuples in collections and tuple types
t048: Existential invariant
t049: Invariants with more than one iterator
t050: Multiple inheritance and collections
t051: Bug test
t052: OCL operations vs. SOIL operations
t053: Mandatory return types for query operations
t054: Generator with Car example
t055: Generator
t056: Nested collections
t057: Nested collections
t058: Cycles and part-of checks for aggregation/composition
t059: Cycles and part-of checks for aggregation/composition
t060: Cycles and part-of checks for aggregation/composition
t061: Cycles and part-of checks for aggregation/composition
t062: Cycles and part-of checks for aggregation/composition
t063: Cycles and part-of checks for aggregation/composition
t064: Cycles and part-of checks for aggregation/composition
t065: Cycles and part-of checks for aggregation/composition
t066: Cycles and part-of checks for aggregation/composition
t067: Cycles and part-of checks for aggregation/composition
t068: Cycles and part-of checks for aggregation/composition
t069: Cycles and part-of checks for aggregation/composition
t070: Cycles and part-of checks for aggregation/composition
t071: Cycles and part-of checks for aggregation/composition
t072: USE grammar
t073: Mandatory return types for query operations
t074: USE grammar
t075: USE grammar (qualified enumeration literals)
t076: Set comparsion
t077: New operations from OCL 2.2
t078: Pre- and postcondition checks
t079: OclUndefined()
t080: Relative paths in command files
t081: Object destruction
t082: USE grammar
t083: USE grammar
t084: SOIL and postconditions
t085: USE grammar
t086: Qualified associations
t087: USE model (multiple inheritance)
t088: Mandatory return types for query operations
t089: Association class and navigation
t090: Association class and navigation
t091: -
t092: While loop in SOIL
t093: Generator
t094: SOIL operations
t095: SOIL operations and postconditions
t096: Qualified associations
t097: Generator and association classes
t098: Duplicate operation definitions 
t099: Object collections
t100: Overriding
t101: Large command file
t102: Generator and association classes
t103: ASSL call statement
t104: Class and association with same name
t105: SOIL operations
t106: Model info (output of compiled model)
t107: oclIsNew()
t108: Association class inheritance
t109: Larger case study (RBAC meta model) / byUseId() and useToId()
t110: Overriding of operations and collection types
t111: Derived attributes
t112: Ordered association ends
t113: UML 2 meta model (union, subsets, derive)
t114: redefines
t115: redefines
t116: Association class inheritance
t117: Association class inheritance
t118: Closure operation
t119: State machine and object creation with invalid state invariant
t120: Test for new OCL 2.4 operations oclSelectByKind and oclSelectByType
t121: Correct evaluation of at pre used for operation call in post-conditions